---
layout: post
title: Kickass HTML5 SVG Charts 
---



h1. {{ page.title }} 

h2(date). {{ page.date | date: "%B %d, %Y" }}

<div id="chart1" style="width: 550px; height: 200px;"></div>

Let's face it, most charting libraries suck. Often times the default charts look awful. You need to set seemingly hundreds of options to get something that looks halfway decent. Other times the api is wonky. You might have to do extra work to 0 pad or transform data into an intermediate data structure (I'm looking at you Google Visualizations).

It's 2011, charts should look good by default, not require developers to do extra data transformation and (gasp!) work in IE. But after looking around for a charting library that could do all three of these things (well) - I was left found wanting.

Lacking a good solution, I decided to write my own open-source charting library - Raphy Charts. Raphy Charts draws vector charts in SVG and is built ontop of the excellent "Raphael":http://raphaeljs.com/ - it even works in IE due to Raphael's fallback support of VML. Time series (line, bar) charts, smoothing, tooltips, axis labeling, and sparklines are all currently supported, and I have many more features planned for the near future.

The best part is Raphy Charts is open source and super easy to setup.

<a href="http://jcarver989.github.com/raphy-charts" class="micro bordered pill green button">Get Raphy Charts</a>


<script src="https://raw.github.com/DmitryBaranovskiy/raphael/master/raphael-min.js"></script>
<script src="https://raw.github.com/jcarver989/raphy-charts/master/compiled/charts.min.js"></script>
<script type="text/javascript">
  var create_date = function(day) {
    var d;
    d = new Date();
    return new Date(d.getFullYear(), d.getMonth(), day + 1);
  };

  var create_exponential_points = function() {
    var i, _results;
    _results = [];
    for (i = 0; i <= 25; i++) {
      _results.push([create_date(i), i * 4.]);
    }
    return _results;
  };

  var create_squared_points = function() {
    var i, _results;
    _results = [];
    for (i = 0; i <= 25; i++) {
      _results.push([create_date(i), i * (i - 1)]);
    }
    return _results;
  };

c = new Charts.LineChart('chart1', {
  show_y_labels: false
});

c.add_line ({ 
  // 2d array of x,y values ex:  [[1,1], [2,3], [3,20]]
  // OR x values may be dates: [[new Date(),100]...]
  data: create_squared_points() 
});

c.add_line({
  data: create_exponential_points(), 
  options: {
    line_color : "#55bb00",
    area_color : "#55bb00",
    dot_color  :  "#55bb00"
  }
});

c.draw();
</script>
